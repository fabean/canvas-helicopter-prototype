{"version":3,"sources":["../../src/js/scripts.js"],"names":[],"mappings":"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","file":"scripts.js","sourcesContent":["'use strict';\n\nlet c,\n    ctx,\n    fps = 60,\n    dot = {\n      color: 'white',\n      x: 20,\n      y: 295,\n      speed: {\n        x: 5,\n        y: 5\n      },\n      width: 10,\n      height: 10\n    },\n    keysDown = {},\n    path = [],\n    startScreen = false;\n\n\nconst CANVAS_HEIGHT = '600',\n      CANVAS_WIDTH = '800',\n      PATH_WIDTH = 20;\n\nlet requestAnimFrame = (function(){\n  return  window.requestAnimationFrame       ||\n          window.webkitRequestAnimationFrame ||\n          window.mozRequestAnimationFrame    ||\n          function( callback ){\n            window.setTimeout(callback, 1000 / fps);\n          };\n})();\n\n\nlet movePlayer = () => {\n  if (38 in keysDown) { // Player holding up\n    if (10 <= dot.y) {\n      dot.y += -(dot.speed.y);\n    }\n  }\n  if (40 in keysDown) { // Player holding down\n    if (c.height-10 >= dot.y) {\n      dot.y += dot.speed.y;\n    }\n  }\n  if (37 in keysDown) { // Player holding left\n    if (10 <= dot.x) {\n      dot.x += -(dot.speed.x);\n    }\n  }\n  if (39 in keysDown) { // Player holding right\n    if (c.width-10 >= dot.x) {\n      dot.x += dot.speed.x;\n    }\n  }\n};\n\nlet movePath = () => {\n  for (let i=0; i<path.length; i++) {\n    path[i].x -= 1;\n\n    // if the path is off screen we replace it\n    if (path[i].x === -PATH_WIDTH) {\n\n      let thisHeight = Math.floor(Math.random() * CANVAS_HEIGHT) + 50; // 50 is a min height?\n      // array.pop seems like [i] changes value so I'm just replacing the current path\n      path[i] = {\n        width: PATH_WIDTH,\n        height: thisHeight,\n        y: (CANVAS_HEIGHT/2 - thisHeight/2),\n        x: CANVAS_WIDTH,\n        color: 'black'\n      };\n\n    }\n  }\n};\n\nlet calcCollision = () => {\n  // loop through path and see which one I'm current in\n  for (let i=0; i<path.length; i++) {\n    if (path[i].x < dot.x && path[i].x+PATH_WIDTH > dot.x) {\n      // this means this is the path youre currently in\n\n      if (path[i].y > dot.y || path[i].height+path[i].y < dot.y) {\n        console.log('you collided');\n        startScreen = true;\n      }\n    }\n  }\n};\n\n// if you want to draw lots of circles you'll use this function\nlet drawCircle = (circle) => {\n  ctx.fillStyle = circle.color;\n  ctx.beginPath();\n  ctx.arc(circle.x, circle.y, circle.radius, 0, Math.PI*2, true);\n  ctx.fill();\n};\n\n// if you want to draw lots of rectangles you'll use this function\nlet drawRect = (rectangle) => {\n  ctx.fillStyle = rectangle.color;\n  ctx.fillRect(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n};\n\n\nlet render = () => {\n  if (startScreen) {\n    ctx.fillStyle = '#6F6';\n    ctx.fillRect(0,0,CANVAS_WIDTH,CANVAS_WIDTH);\n\n    ctx.fillStyle = 'black';\n    ctx.font = '20px Helvetica';\n    let message = 'You crashed!';\n    let messageTextWidth = ctx.measureText(message);\n    ctx.fillText(message, (CANVAS_WIDTH/2 - messageTextWidth.width/2), 200);\n    let message2 = 'Click to start again';\n    let messageTextWidth2 = ctx.measureText(message2);\n    ctx.fillText(message2, (CANVAS_WIDTH/2 - messageTextWidth2.width/2), 300);\n    return;\n  }\n  // all of your render code goes here\n\n  // first we will calculate player movement\n  movePlayer();\n\n  // move the path\n  movePath();\n\n  // was there a collision?\n  calcCollision();\n\n  // draw background\n  ctx.fillStyle = '#6F6';\n  ctx.fillRect(0,0,CANVAS_WIDTH,CANVAS_WIDTH);\n\n  for (let i=0; i<path.length; i++) {\n    drawRect(path[i]);\n  }\n\n  // helicopter\n  drawRect(dot);\n\n};\n\n\nlet animationLoop = () => {\n  requestAnimFrame(animationLoop);\n  render();\n};\n\nlet gameRestart = () => {\n  startScreen = false;\n  dot.x = 20;\n  dot.y = 295;\n};\n\nwindow.onload = ()  => {\n  c = document.getElementById('canvas');\n  c.width = CANVAS_WIDTH;\n  c.height = CANVAS_HEIGHT;\n\n  ctx = c.getContext('2d');\n\n  // Handle keyboard controls\n  addEventListener('keydown', function (e) {\n    keysDown[e.keyCode] = true;\n  }, false);\n  addEventListener('keyup', function (e) {\n    delete keysDown[e.keyCode];\n  }, false);\n  addEventListener('mousedown', gameRestart);\n\n  // generate inital path\n  for (let i=0; i<CANVAS_WIDTH/PATH_WIDTH+1; i++) {\n    let thisHeight = Math.floor(Math.random() * CANVAS_HEIGHT) + 50; // 50 is a min height?\n\n    let thisPath = {\n      width: PATH_WIDTH,\n      height: thisHeight,\n      y: (CANVAS_HEIGHT/2 - thisHeight/2),\n      x: i*PATH_WIDTH,\n      color: 'black'\n    };\n    path.push(thisPath);\n  }\n\n  animationLoop();\n};\n\n// let person = [Math.floor(Math.random() * winner.length)];\n"]}